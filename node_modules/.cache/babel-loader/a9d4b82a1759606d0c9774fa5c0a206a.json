{"remainingRequest":"C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cell8\\Projects\\pokedex-vue\\src\\components\\SummaryFavorites.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\src\\components\\SummaryFavorites.vue","mtime":1559188828392},{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\.babelrc","mtime":1559188828333},{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cell8\\Projects\\pokedex-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'SummaryFavorites',\n  props: {\n    pokemonList: {\n      type: Array,\n      required: true\n    },\n    favorites: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      maximumList: 10\n    };\n  },\n  computed: {\n    favoriteListLength: function favoriteListLength() {\n      return this.favorites.length;\n    }\n  },\n  methods: {\n    startInterval: function startInterval() {\n      var self = this;\n      var intervalID = window.setInterval(pickRandomPokemonOrClearInterval, 500);\n\n      function pickRandomPokemonOrClearInterval() {\n        if (self.favoriteListLength < self.maximumList) {\n          self.pickRandomPokemon();\n        } else {\n          clearInterval(intervalID);\n        }\n      }\n    },\n    pickRandomPokemon: function pickRandomPokemon() {\n      var list = this.pokemonList.filter(function (pokemon) {\n        return !this.favorites.includes(pokemon.name);\n      }, this);\n      var number = Math.floor(Math.random() * Math.floor(list.length));\n      this.$emit('addFavorite', list[number].name);\n    },\n    emptyFavoritePokemonList: function emptyFavoritePokemonList() {\n      this.$emit('eraseFavoritePokemonList');\n    }\n  }\n};",{"version":3,"sources":["SummaryFavorites.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GAFA;AAYA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,UAAA,GAAA,MAAA,CAAA,WAAA,CAAA,gCAAA,EAAA,GAAA,CAAA;;AACA,eAAA,gCAAA,GAAA;AACA,YAAA,IAAA,CAAA,kBAAA,GAAA,IAAA,CAAA,WAAA,EAAA;AACA,UAAA,IAAA,CAAA,iBAAA;AACA,SAFA,MAEA;AACA,UAAA,aAAA,CAAA,UAAA,CAAA;AACA;AACA;AAEA,KAZA;AAaA,IAAA,iBAbA,+BAaA;AACA,UAAA,IAAA,GAAA,KAAA,WAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,CAAA,KAAA,SAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAIA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,IAAA,CAAA,MAAA,CAAA,CAAA,IAAA;AACA,KApBA;AAqBA,IAAA,wBArBA,sCAqBA;AACA,WAAA,KAAA,CAAA,0BAAA;AACA;AAvBA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h2>Your chosen favorite Pokémon</h2>\r\n    <p v-if=\"favoriteListLength < maximumList\">\r\n      I can't choose, help me <button\r\n        class=\"nes-btn is-success\"\r\n        @click=\"startInterval\"\r\n      >\r\n        Pick Pokémon\r\n      </button>\r\n    </p>\r\n    <template>\r\n      <p\r\n        v-for=\"(pokemonName, index) in favorites\"\r\n        :key=\"index\"\r\n        class=\"chosen-pokemon\"\r\n      >\r\n        <img\r\n          src=\"../assets/pokeball.png\"\r\n          alt=\"pokeball\"\r\n        >\r\n        {{ pokemonName }}\r\n      </p>\r\n    </template>\r\n    <p v-if=\"favoriteListLength > 1 && favoriteListLength < maximumList\">\r\n      You can add {{ maximumList - favoriteListLength }} more Pokémon\r\n    </p>\r\n    <p v-if=\"favoriteListLength > 9\">\r\n      Your list is full!\r\n    </p>\r\n    <p v-if=\"favoriteListLength > 9\">\r\n      Do you want to <button\r\n        class=\"nes-btn is-error\"\r\n        @click=\"emptyFavoritePokemonList\"\r\n      >\r\n        Delete\r\n      </button> the list?\r\n    </p>\r\n    <router-link\r\n      v-if=\"favoriteListLength > 0\"\r\n      class=\"nes-btn\"\r\n      to=\"/favorites\"\r\n    >\r\n      View your favorite Pokémon\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'SummaryFavorites',\r\n        props: {\r\n          pokemonList: {\r\n            type: Array,\r\n            required: true\r\n          },\r\n          favorites: {\r\n            type: Array,\r\n            required: true\r\n          }\r\n        },\r\n        data: function() {\r\n            return {\r\n                maximumList: 10\r\n            }\r\n        },\r\n        computed: {\r\n            favoriteListLength() {\r\n                return this.favorites.length\r\n            }\r\n        },\r\n        methods: {\r\n          startInterval() {\r\n            const self = this\r\n            const intervalID = window.setInterval(pickRandomPokemonOrClearInterval, 500)\r\n            function pickRandomPokemonOrClearInterval() {\r\n              if(self.favoriteListLength < self.maximumList) {\r\n                self.pickRandomPokemon()\r\n              } else {\r\n                clearInterval(intervalID)\r\n              }\r\n            }\r\n\r\n          },\r\n          pickRandomPokemon() {\r\n            const list = this.pokemonList.filter(function(pokemon){\r\n              return !this.favorites.includes(pokemon.name)\r\n            }, this)\r\n            \r\n            const number = Math.floor(Math.random() * Math.floor(list.length))\r\n            this.$emit('addFavorite', list[number].name)\r\n          },\r\n          emptyFavoritePokemonList() {\r\n            this.$emit('eraseFavoritePokemonList')\r\n          }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n.chosen-pokemon {\r\n    text-transform: capitalize;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}